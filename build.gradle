plugins {
    id 'java'
    id 'application'
    id('io.dinject.openapi') version('1.2')
    id('com.github.sherter.google-java-format') version('0.9')
}

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    /*flatDir {
        dirs '/home/vincent/Github/JRPClightning/build/libs'
    }*/
}

dependencies {
    //implementation name: 'jrpclightning-0.2.1-SNAPSHOT-with-dependencies'
    implementation 'io.github.clightning4j:jrpclightning:0.2.2'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'io.javalin:javalin-bundle:4.6.0'

    testImplementation 'com.squareup.okhttp3:okhttp:4.9.3'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.konghq:unirest-java:3.13.8'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    testImplementation 'ch.qos.logback:logback-core:1.2.11'
    testImplementation 'org.slf4j:slf4j-api:1.7.36'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes(
                'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'io.vincenzopalazzo.lightning.App'
        )
    }

    from(configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
}

task createRunnableScript {
    dependsOn("jar")
    file("${projectDir}/${project.name}-gen.sh").createNewFile()
    file("${projectDir}/${project.name}-gen.sh").write(
            """#!/bin/bash
# Script generated from gradle! By clightning4j
${System.getProperties().getProperty("java.home")}/bin/java -jar ${project.buildDir.absolutePath}/libs/${project.name}.jar
""")
}

application {
    // Define the main class for the application.
    mainClassName = 'io.vincenzopalazzo.lightning.App'
}
